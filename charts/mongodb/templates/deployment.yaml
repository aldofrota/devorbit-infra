apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: {{ .Values.mongodb.port }}
              protocol: TCP
          {{- if .Values.mongodb.authEnabled }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongodb.username | quote }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: {{ .Values.mongodb.password | quote }}
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongodb.database | quote }}
          {{- end }}
          command:
            - mongod
            - --port
            - "{{ .Values.mongodb.port }}"
            - --dbpath
            - /data/db
            {{- if not .Values.mongodb.authEnabled }}
            - --noauth
            {{- end }}
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data/db
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          {{- if .Values.persistence.storageClass }}
          persistentVolumeClaim:
            claimName: {{ include "mongodb.fullname" . }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 